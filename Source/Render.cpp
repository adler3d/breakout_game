// This is an independent project of an individual developer. Dear PVS-Studio, please check it.
// PVS-Studio Static Code Analyzer for C, C++, C#, and Java: http://www.viva64.com
#include "Render.h"

///-------------------------------------------------------------------------





 ///------------------------------------------------------------------------
///
///
///
/// Constructor
///
///
///-------------------------------------------------------------------------
dm::ARender::ARender(sf::RenderTarget &target)
    :
        mTarget(target)
{

}
///-------------------------------------------------------------------------





 ///------------------------------------------------------------------------
///
///
///
/// Destructor
///
///
///-------------------------------------------------------------------------
dm::ARender::~ARender()
{


}
///-------------------------------------------------------------------------






 ///------------------------------------------------------------------------
///
///
///
/// 
///
///
///-------------------------------------------------------------------------
void dm::ARender::pushMatrix()
{
    mStack.push_back(mStates);
}
///-------------------------------------------------------------------------





 ///------------------------------------------------------------------------
///
///
///
/// 
///
///
///-------------------------------------------------------------------------
void dm::ARender::popMatrix()
{
    if (!mStack.empty())
    {
        mStates = mStack.back();
        mStack.pop_back();
    }
}
///-------------------------------------------------------------------------



 ///------------------------------------------------------------------------
///
///
///
/// 
///
///
///-------------------------------------------------------------------------
void dm::ARender::matrixTranslate(const FPoint &position)
{
    mStates.transform.translate(position.x, position.y);
}
///-------------------------------------------------------------------------




 ///------------------------------------------------------------------------
///
///
///
/// 
///
///
///-------------------------------------------------------------------------
void dm::ARender::matrixRotate(const float angle)
{
    mStates.transform.rotate(angle);
}
///-------------------------------------------------------------------------




 ///------------------------------------------------------------------------
///
///
///
/// 
///
///
///-------------------------------------------------------------------------
void dm::ARender::render(const sf::Drawable& drawable)
{
    mTarget.draw(drawable, mStates);
}